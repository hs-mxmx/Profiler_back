{"ast":null,"code":"export default class APIService {\n  // Insert an user\n  static InsertUser(body) {\n    return fetch(`http://localhost:5000/session/register`, {\n      'method': 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.ok) return response.json();else {\n        console.log(response);\n      }\n    }).catch(error => console.log(error));\n  } // Login\n\n\n  static Login(body) {\n    return fetch(`http://localhost:5000/login`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.ok) return response.json();else {\n        console.log(response);\n      }\n    }).catch(error => console.log(error));\n  }\n\n}","map":{"version":3,"names":["APIService","InsertUser","body","fetch","headers","JSON","stringify","then","response","ok","json","console","log","catch","error","Login"],"sources":["C:/Users/Daniel/Desktop/ProFiler/react-profiler/src/components/APIService.js"],"sourcesContent":["export default class APIService {\r\n    // Insert an user\r\n    static InsertUser(body) {\r\n        return fetch(`http://localhost:5000/session/register`, {\r\n            'method': 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(response => {\r\n                if (response.ok)\r\n                    return response.json()\r\n                else {\r\n                    console.log(response)\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    // Login\r\n    static Login(body) {\r\n        return fetch(`http://localhost:5000/login`, {\r\n            'method': 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(response => {\r\n                if (response.ok)\r\n                    return response.json()\r\n                else {\r\n                    console.log(response)\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,eAAe,MAAMA,UAAN,CAAiB;EAC5B;EACiB,OAAVC,UAAU,CAACC,IAAD,EAAO;IACpB,OAAOC,KAAK,CAAE,wCAAF,EAA2C;MACnD,UAAU,KADyC;MAEnDC,OAAO,EAAE;QACL,gBAAgB;MADX,CAF0C;MAKnDF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IAL6C,CAA3C,CAAL,CAOFK,IAPE,CAOGC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAb,EACI,OAAOD,QAAQ,CAACE,IAAT,EAAP,CADJ,KAEK;QACDC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;MACH;IACJ,CAbE,EAcFK,KAdE,CAcIC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAdb,CAAP;EAeH,CAlB2B,CAoB5B;;;EACY,OAALC,KAAK,CAACb,IAAD,EAAO;IACf,OAAOC,KAAK,CAAE,6BAAF,EAAgC;MACxC,UAAU,MAD8B;MAExCC,OAAO,EAAE;QACL,gBAAgB;MADX,CAF+B;MAKxCF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;IALkC,CAAhC,CAAL,CAOFK,IAPE,CAOGC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,EAAb,EACI,OAAOD,QAAQ,CAACE,IAAT,EAAP,CADJ,KAEK;QACDC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;MACH;IACJ,CAbE,EAcFK,KAdE,CAcIC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAdb,CAAP;EAeH;;AArC2B"},"metadata":{},"sourceType":"module"}